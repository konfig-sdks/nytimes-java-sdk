/*
 * Books API
 * The Books API provides information about book reviews and The New York Times Best Sellers lists.  ## Best Sellers Lists Services ### List Names The lists/names service returns a list of all the NYT Best Sellers Lists.  Some lists are published weekly and others monthly.  The response includes when each list was first published and last published.  ``` /lists/names.json ```  ### List Data  The lists/{date}/{name} service returns the books on the best sellers list for the specified date and list name.  ``` /lists/2019-01-20/hardcover-fiction.json ```  Use \"current\" for {date} to get the latest list. ``` /lists/current/hardcover-fiction.json ```  ## Book Reviews Services  The book reviews service lets you get NYT book review by author, ISBN, or title.  ``` /reviews.json?author=Michelle+Obama ```  ``` /reviews.json?isbn=9781524763138 ```  ``` /reviews.json?title=Becoming ```  ## Example Calls  ``` https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=yourkey ```  ``` https://api.nytimes.com/svc/books/v3/reviews.json?author=Stephen+King&api-key=yourkey ``` 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ListGetBestSellersResponseResultsInnerBookDetailsInner;
import com.konfigthis.client.model.ListGetBestSellersResponseResultsInnerIsbnsInner;
import com.konfigthis.client.model.ListGetBestSellersResponseResultsInnerReviewsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ListGetBestSellersResponseResultsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ListGetBestSellersResponseResultsInner {
  public static final String SERIALIZED_NAME_LIST_NAME = "list_name";
  @SerializedName(SERIALIZED_NAME_LIST_NAME)
  private String listName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_BESTSELLERS_DATE = "bestsellers_date";
  @SerializedName(SERIALIZED_NAME_BESTSELLERS_DATE)
  private String bestsellersDate;

  public static final String SERIALIZED_NAME_PUBLISHED_DATE = "published_date";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_DATE)
  private String publishedDate;

  public static final String SERIALIZED_NAME_RANK = "rank";
  @SerializedName(SERIALIZED_NAME_RANK)
  private Integer rank;

  public static final String SERIALIZED_NAME_RANK_LAST_WEEK = "rank_last_week";
  @SerializedName(SERIALIZED_NAME_RANK_LAST_WEEK)
  private Integer rankLastWeek;

  public static final String SERIALIZED_NAME_WEEKS_ON_LIST = "weeks_on_list";
  @SerializedName(SERIALIZED_NAME_WEEKS_ON_LIST)
  private Integer weeksOnList;

  public static final String SERIALIZED_NAME_ASTERISK = "asterisk";
  @SerializedName(SERIALIZED_NAME_ASTERISK)
  private Integer asterisk;

  public static final String SERIALIZED_NAME_DAGGER = "dagger";
  @SerializedName(SERIALIZED_NAME_DAGGER)
  private Integer dagger;

  public static final String SERIALIZED_NAME_AMAZON_PRODUCT_URL = "amazon_product_url";
  @SerializedName(SERIALIZED_NAME_AMAZON_PRODUCT_URL)
  private String amazonProductUrl;

  public static final String SERIALIZED_NAME_ISBNS = "isbns";
  @SerializedName(SERIALIZED_NAME_ISBNS)
  private List<ListGetBestSellersResponseResultsInnerIsbnsInner> isbns = null;

  public static final String SERIALIZED_NAME_BOOK_DETAILS = "book_details";
  @SerializedName(SERIALIZED_NAME_BOOK_DETAILS)
  private List<ListGetBestSellersResponseResultsInnerBookDetailsInner> bookDetails = null;

  public static final String SERIALIZED_NAME_REVIEWS = "reviews";
  @SerializedName(SERIALIZED_NAME_REVIEWS)
  private List<ListGetBestSellersResponseResultsInnerReviewsInner> reviews = null;

  public ListGetBestSellersResponseResultsInner() {
  }

  public ListGetBestSellersResponseResultsInner listName(String listName) {
    
    
    
    
    this.listName = listName;
    return this;
  }

   /**
   * Get listName
   * @return listName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getListName() {
    return listName;
  }


  public void setListName(String listName) {
    
    
    
    this.listName = listName;
  }


  public ListGetBestSellersResponseResultsInner displayName(String displayName) {
    
    
    
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    
    
    
    this.displayName = displayName;
  }


  public ListGetBestSellersResponseResultsInner bestsellersDate(String bestsellersDate) {
    
    
    
    
    this.bestsellersDate = bestsellersDate;
    return this;
  }

   /**
   * Get bestsellersDate
   * @return bestsellersDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBestsellersDate() {
    return bestsellersDate;
  }


  public void setBestsellersDate(String bestsellersDate) {
    
    
    
    this.bestsellersDate = bestsellersDate;
  }


  public ListGetBestSellersResponseResultsInner publishedDate(String publishedDate) {
    
    
    
    
    this.publishedDate = publishedDate;
    return this;
  }

   /**
   * Get publishedDate
   * @return publishedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPublishedDate() {
    return publishedDate;
  }


  public void setPublishedDate(String publishedDate) {
    
    
    
    this.publishedDate = publishedDate;
  }


  public ListGetBestSellersResponseResultsInner rank(Integer rank) {
    
    
    
    
    this.rank = rank;
    return this;
  }

   /**
   * Get rank
   * @return rank
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRank() {
    return rank;
  }


  public void setRank(Integer rank) {
    
    
    
    this.rank = rank;
  }


  public ListGetBestSellersResponseResultsInner rankLastWeek(Integer rankLastWeek) {
    
    
    
    
    this.rankLastWeek = rankLastWeek;
    return this;
  }

   /**
   * Get rankLastWeek
   * @return rankLastWeek
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRankLastWeek() {
    return rankLastWeek;
  }


  public void setRankLastWeek(Integer rankLastWeek) {
    
    
    
    this.rankLastWeek = rankLastWeek;
  }


  public ListGetBestSellersResponseResultsInner weeksOnList(Integer weeksOnList) {
    
    
    
    
    this.weeksOnList = weeksOnList;
    return this;
  }

   /**
   * Get weeksOnList
   * @return weeksOnList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWeeksOnList() {
    return weeksOnList;
  }


  public void setWeeksOnList(Integer weeksOnList) {
    
    
    
    this.weeksOnList = weeksOnList;
  }


  public ListGetBestSellersResponseResultsInner asterisk(Integer asterisk) {
    
    
    
    
    this.asterisk = asterisk;
    return this;
  }

   /**
   * Get asterisk
   * @return asterisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAsterisk() {
    return asterisk;
  }


  public void setAsterisk(Integer asterisk) {
    
    
    
    this.asterisk = asterisk;
  }


  public ListGetBestSellersResponseResultsInner dagger(Integer dagger) {
    
    
    
    
    this.dagger = dagger;
    return this;
  }

   /**
   * Get dagger
   * @return dagger
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDagger() {
    return dagger;
  }


  public void setDagger(Integer dagger) {
    
    
    
    this.dagger = dagger;
  }


  public ListGetBestSellersResponseResultsInner amazonProductUrl(String amazonProductUrl) {
    
    
    
    
    this.amazonProductUrl = amazonProductUrl;
    return this;
  }

   /**
   * Get amazonProductUrl
   * @return amazonProductUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAmazonProductUrl() {
    return amazonProductUrl;
  }


  public void setAmazonProductUrl(String amazonProductUrl) {
    
    
    
    this.amazonProductUrl = amazonProductUrl;
  }


  public ListGetBestSellersResponseResultsInner isbns(List<ListGetBestSellersResponseResultsInnerIsbnsInner> isbns) {
    
    
    
    
    this.isbns = isbns;
    return this;
  }

  public ListGetBestSellersResponseResultsInner addIsbnsItem(ListGetBestSellersResponseResultsInnerIsbnsInner isbnsItem) {
    if (this.isbns == null) {
      this.isbns = new ArrayList<>();
    }
    this.isbns.add(isbnsItem);
    return this;
  }

   /**
   * Get isbns
   * @return isbns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ListGetBestSellersResponseResultsInnerIsbnsInner> getIsbns() {
    return isbns;
  }


  public void setIsbns(List<ListGetBestSellersResponseResultsInnerIsbnsInner> isbns) {
    
    
    
    this.isbns = isbns;
  }


  public ListGetBestSellersResponseResultsInner bookDetails(List<ListGetBestSellersResponseResultsInnerBookDetailsInner> bookDetails) {
    
    
    
    
    this.bookDetails = bookDetails;
    return this;
  }

  public ListGetBestSellersResponseResultsInner addBookDetailsItem(ListGetBestSellersResponseResultsInnerBookDetailsInner bookDetailsItem) {
    if (this.bookDetails == null) {
      this.bookDetails = new ArrayList<>();
    }
    this.bookDetails.add(bookDetailsItem);
    return this;
  }

   /**
   * Get bookDetails
   * @return bookDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ListGetBestSellersResponseResultsInnerBookDetailsInner> getBookDetails() {
    return bookDetails;
  }


  public void setBookDetails(List<ListGetBestSellersResponseResultsInnerBookDetailsInner> bookDetails) {
    
    
    
    this.bookDetails = bookDetails;
  }


  public ListGetBestSellersResponseResultsInner reviews(List<ListGetBestSellersResponseResultsInnerReviewsInner> reviews) {
    
    
    
    
    this.reviews = reviews;
    return this;
  }

  public ListGetBestSellersResponseResultsInner addReviewsItem(ListGetBestSellersResponseResultsInnerReviewsInner reviewsItem) {
    if (this.reviews == null) {
      this.reviews = new ArrayList<>();
    }
    this.reviews.add(reviewsItem);
    return this;
  }

   /**
   * Get reviews
   * @return reviews
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ListGetBestSellersResponseResultsInnerReviewsInner> getReviews() {
    return reviews;
  }


  public void setReviews(List<ListGetBestSellersResponseResultsInnerReviewsInner> reviews) {
    
    
    
    this.reviews = reviews;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ListGetBestSellersResponseResultsInner instance itself
   */
  public ListGetBestSellersResponseResultsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListGetBestSellersResponseResultsInner listGetBestSellersResponseResultsInner = (ListGetBestSellersResponseResultsInner) o;
    return Objects.equals(this.listName, listGetBestSellersResponseResultsInner.listName) &&
        Objects.equals(this.displayName, listGetBestSellersResponseResultsInner.displayName) &&
        Objects.equals(this.bestsellersDate, listGetBestSellersResponseResultsInner.bestsellersDate) &&
        Objects.equals(this.publishedDate, listGetBestSellersResponseResultsInner.publishedDate) &&
        Objects.equals(this.rank, listGetBestSellersResponseResultsInner.rank) &&
        Objects.equals(this.rankLastWeek, listGetBestSellersResponseResultsInner.rankLastWeek) &&
        Objects.equals(this.weeksOnList, listGetBestSellersResponseResultsInner.weeksOnList) &&
        Objects.equals(this.asterisk, listGetBestSellersResponseResultsInner.asterisk) &&
        Objects.equals(this.dagger, listGetBestSellersResponseResultsInner.dagger) &&
        Objects.equals(this.amazonProductUrl, listGetBestSellersResponseResultsInner.amazonProductUrl) &&
        Objects.equals(this.isbns, listGetBestSellersResponseResultsInner.isbns) &&
        Objects.equals(this.bookDetails, listGetBestSellersResponseResultsInner.bookDetails) &&
        Objects.equals(this.reviews, listGetBestSellersResponseResultsInner.reviews)&&
        Objects.equals(this.additionalProperties, listGetBestSellersResponseResultsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listName, displayName, bestsellersDate, publishedDate, rank, rankLastWeek, weeksOnList, asterisk, dagger, amazonProductUrl, isbns, bookDetails, reviews, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListGetBestSellersResponseResultsInner {\n");
    sb.append("    listName: ").append(toIndentedString(listName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    bestsellersDate: ").append(toIndentedString(bestsellersDate)).append("\n");
    sb.append("    publishedDate: ").append(toIndentedString(publishedDate)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    rankLastWeek: ").append(toIndentedString(rankLastWeek)).append("\n");
    sb.append("    weeksOnList: ").append(toIndentedString(weeksOnList)).append("\n");
    sb.append("    asterisk: ").append(toIndentedString(asterisk)).append("\n");
    sb.append("    dagger: ").append(toIndentedString(dagger)).append("\n");
    sb.append("    amazonProductUrl: ").append(toIndentedString(amazonProductUrl)).append("\n");
    sb.append("    isbns: ").append(toIndentedString(isbns)).append("\n");
    sb.append("    bookDetails: ").append(toIndentedString(bookDetails)).append("\n");
    sb.append("    reviews: ").append(toIndentedString(reviews)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("list_name");
    openapiFields.add("display_name");
    openapiFields.add("bestsellers_date");
    openapiFields.add("published_date");
    openapiFields.add("rank");
    openapiFields.add("rank_last_week");
    openapiFields.add("weeks_on_list");
    openapiFields.add("asterisk");
    openapiFields.add("dagger");
    openapiFields.add("amazon_product_url");
    openapiFields.add("isbns");
    openapiFields.add("book_details");
    openapiFields.add("reviews");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ListGetBestSellersResponseResultsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ListGetBestSellersResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListGetBestSellersResponseResultsInner is not found in the empty JSON string", ListGetBestSellersResponseResultsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("list_name") != null && !jsonObj.get("list_name").isJsonNull()) && !jsonObj.get("list_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `list_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("list_name").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("bestsellers_date") != null && !jsonObj.get("bestsellers_date").isJsonNull()) && !jsonObj.get("bestsellers_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bestsellers_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bestsellers_date").toString()));
      }
      if ((jsonObj.get("published_date") != null && !jsonObj.get("published_date").isJsonNull()) && !jsonObj.get("published_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `published_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("published_date").toString()));
      }
      if ((jsonObj.get("amazon_product_url") != null && !jsonObj.get("amazon_product_url").isJsonNull()) && !jsonObj.get("amazon_product_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_product_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_product_url").toString()));
      }
      if (jsonObj.get("isbns") != null && !jsonObj.get("isbns").isJsonNull()) {
        JsonArray jsonArrayisbns = jsonObj.getAsJsonArray("isbns");
        if (jsonArrayisbns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("isbns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `isbns` to be an array in the JSON string but got `%s`", jsonObj.get("isbns").toString()));
          }

          // validate the optional field `isbns` (array)
          for (int i = 0; i < jsonArrayisbns.size(); i++) {
            ListGetBestSellersResponseResultsInnerIsbnsInner.validateJsonObject(jsonArrayisbns.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("book_details") != null && !jsonObj.get("book_details").isJsonNull()) {
        JsonArray jsonArraybookDetails = jsonObj.getAsJsonArray("book_details");
        if (jsonArraybookDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("book_details").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `book_details` to be an array in the JSON string but got `%s`", jsonObj.get("book_details").toString()));
          }

          // validate the optional field `book_details` (array)
          for (int i = 0; i < jsonArraybookDetails.size(); i++) {
            ListGetBestSellersResponseResultsInnerBookDetailsInner.validateJsonObject(jsonArraybookDetails.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("reviews") != null && !jsonObj.get("reviews").isJsonNull()) {
        JsonArray jsonArrayreviews = jsonObj.getAsJsonArray("reviews");
        if (jsonArrayreviews != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reviews").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reviews` to be an array in the JSON string but got `%s`", jsonObj.get("reviews").toString()));
          }

          // validate the optional field `reviews` (array)
          for (int i = 0; i < jsonArrayreviews.size(); i++) {
            ListGetBestSellersResponseResultsInnerReviewsInner.validateJsonObject(jsonArrayreviews.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListGetBestSellersResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListGetBestSellersResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListGetBestSellersResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListGetBestSellersResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListGetBestSellersResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, ListGetBestSellersResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ListGetBestSellersResponseResultsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ListGetBestSellersResponseResultsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ListGetBestSellersResponseResultsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ListGetBestSellersResponseResultsInner
  * @throws IOException if the JSON string is invalid with respect to ListGetBestSellersResponseResultsInner
  */
  public static ListGetBestSellersResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListGetBestSellersResponseResultsInner.class);
  }

 /**
  * Convert an instance of ListGetBestSellersResponseResultsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

