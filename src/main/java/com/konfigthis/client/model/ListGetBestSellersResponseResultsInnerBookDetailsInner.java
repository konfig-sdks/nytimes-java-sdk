/*
 * Books API
 * The Books API provides information about book reviews and The New York Times Best Sellers lists.  ## Best Sellers Lists Services ### List Names The lists/names service returns a list of all the NYT Best Sellers Lists.  Some lists are published weekly and others monthly.  The response includes when each list was first published and last published.  ``` /lists/names.json ```  ### List Data  The lists/{date}/{name} service returns the books on the best sellers list for the specified date and list name.  ``` /lists/2019-01-20/hardcover-fiction.json ```  Use \"current\" for {date} to get the latest list. ``` /lists/current/hardcover-fiction.json ```  ## Book Reviews Services  The book reviews service lets you get NYT book review by author, ISBN, or title.  ``` /reviews.json?author=Michelle+Obama ```  ``` /reviews.json?isbn=9781524763138 ```  ``` /reviews.json?title=Becoming ```  ## Example Calls  ``` https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=yourkey ```  ``` https://api.nytimes.com/svc/books/v3/reviews.json?author=Stephen+King&api-key=yourkey ``` 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ListGetBestSellersResponseResultsInnerBookDetailsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ListGetBestSellersResponseResultsInnerBookDetailsInner {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CONTRIBUTOR = "contributor";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR)
  private String contributor;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_NOTE = "contributor_note";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_NOTE)
  private String contributorNote;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Integer price;

  public static final String SERIALIZED_NAME_AGE_GROUP = "age_group";
  @SerializedName(SERIALIZED_NAME_AGE_GROUP)
  private String ageGroup;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private String publisher;

  public static final String SERIALIZED_NAME_PRIMARY_ISBN13 = "primary_isbn13";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ISBN13)
  private String primaryIsbn13;

  public static final String SERIALIZED_NAME_PRIMARY_ISBN10 = "primary_isbn10";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ISBN10)
  private String primaryIsbn10;

  public ListGetBestSellersResponseResultsInnerBookDetailsInner() {
  }

  public ListGetBestSellersResponseResultsInnerBookDetailsInner title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner contributor(String contributor) {
    
    
    
    
    this.contributor = contributor;
    return this;
  }

   /**
   * Get contributor
   * @return contributor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContributor() {
    return contributor;
  }


  public void setContributor(String contributor) {
    
    
    
    this.contributor = contributor;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner author(String author) {
    
    
    
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthor() {
    return author;
  }


  public void setAuthor(String author) {
    
    
    
    this.author = author;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner contributorNote(String contributorNote) {
    
    
    
    
    this.contributorNote = contributorNote;
    return this;
  }

   /**
   * Get contributorNote
   * @return contributorNote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContributorNote() {
    return contributorNote;
  }


  public void setContributorNote(String contributorNote) {
    
    
    
    this.contributorNote = contributorNote;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner price(Integer price) {
    
    
    
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPrice() {
    return price;
  }


  public void setPrice(Integer price) {
    
    
    
    this.price = price;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner ageGroup(String ageGroup) {
    
    
    
    
    this.ageGroup = ageGroup;
    return this;
  }

   /**
   * Get ageGroup
   * @return ageGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAgeGroup() {
    return ageGroup;
  }


  public void setAgeGroup(String ageGroup) {
    
    
    
    this.ageGroup = ageGroup;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner publisher(String publisher) {
    
    
    
    
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPublisher() {
    return publisher;
  }


  public void setPublisher(String publisher) {
    
    
    
    this.publisher = publisher;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner primaryIsbn13(String primaryIsbn13) {
    
    
    
    
    this.primaryIsbn13 = primaryIsbn13;
    return this;
  }

   /**
   * Get primaryIsbn13
   * @return primaryIsbn13
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryIsbn13() {
    return primaryIsbn13;
  }


  public void setPrimaryIsbn13(String primaryIsbn13) {
    
    
    
    this.primaryIsbn13 = primaryIsbn13;
  }


  public ListGetBestSellersResponseResultsInnerBookDetailsInner primaryIsbn10(String primaryIsbn10) {
    
    
    
    
    this.primaryIsbn10 = primaryIsbn10;
    return this;
  }

   /**
   * Get primaryIsbn10
   * @return primaryIsbn10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryIsbn10() {
    return primaryIsbn10;
  }


  public void setPrimaryIsbn10(String primaryIsbn10) {
    
    
    
    this.primaryIsbn10 = primaryIsbn10;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ListGetBestSellersResponseResultsInnerBookDetailsInner instance itself
   */
  public ListGetBestSellersResponseResultsInnerBookDetailsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListGetBestSellersResponseResultsInnerBookDetailsInner listGetBestSellersResponseResultsInnerBookDetailsInner = (ListGetBestSellersResponseResultsInnerBookDetailsInner) o;
    return Objects.equals(this.title, listGetBestSellersResponseResultsInnerBookDetailsInner.title) &&
        Objects.equals(this.description, listGetBestSellersResponseResultsInnerBookDetailsInner.description) &&
        Objects.equals(this.contributor, listGetBestSellersResponseResultsInnerBookDetailsInner.contributor) &&
        Objects.equals(this.author, listGetBestSellersResponseResultsInnerBookDetailsInner.author) &&
        Objects.equals(this.contributorNote, listGetBestSellersResponseResultsInnerBookDetailsInner.contributorNote) &&
        Objects.equals(this.price, listGetBestSellersResponseResultsInnerBookDetailsInner.price) &&
        Objects.equals(this.ageGroup, listGetBestSellersResponseResultsInnerBookDetailsInner.ageGroup) &&
        Objects.equals(this.publisher, listGetBestSellersResponseResultsInnerBookDetailsInner.publisher) &&
        Objects.equals(this.primaryIsbn13, listGetBestSellersResponseResultsInnerBookDetailsInner.primaryIsbn13) &&
        Objects.equals(this.primaryIsbn10, listGetBestSellersResponseResultsInnerBookDetailsInner.primaryIsbn10)&&
        Objects.equals(this.additionalProperties, listGetBestSellersResponseResultsInnerBookDetailsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, contributor, author, contributorNote, price, ageGroup, publisher, primaryIsbn13, primaryIsbn10, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListGetBestSellersResponseResultsInnerBookDetailsInner {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contributor: ").append(toIndentedString(contributor)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    contributorNote: ").append(toIndentedString(contributorNote)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    ageGroup: ").append(toIndentedString(ageGroup)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    primaryIsbn13: ").append(toIndentedString(primaryIsbn13)).append("\n");
    sb.append("    primaryIsbn10: ").append(toIndentedString(primaryIsbn10)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("description");
    openapiFields.add("contributor");
    openapiFields.add("author");
    openapiFields.add("contributor_note");
    openapiFields.add("price");
    openapiFields.add("age_group");
    openapiFields.add("publisher");
    openapiFields.add("primary_isbn13");
    openapiFields.add("primary_isbn10");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ListGetBestSellersResponseResultsInnerBookDetailsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ListGetBestSellersResponseResultsInnerBookDetailsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListGetBestSellersResponseResultsInnerBookDetailsInner is not found in the empty JSON string", ListGetBestSellersResponseResultsInnerBookDetailsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("contributor") != null && !jsonObj.get("contributor").isJsonNull()) && !jsonObj.get("contributor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor").toString()));
      }
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      if ((jsonObj.get("contributor_note") != null && !jsonObj.get("contributor_note").isJsonNull()) && !jsonObj.get("contributor_note").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributor_note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributor_note").toString()));
      }
      if ((jsonObj.get("age_group") != null && !jsonObj.get("age_group").isJsonNull()) && !jsonObj.get("age_group").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `age_group` to be a primitive type in the JSON string but got `%s`", jsonObj.get("age_group").toString()));
      }
      if ((jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) && !jsonObj.get("publisher").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisher` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisher").toString()));
      }
      if ((jsonObj.get("primary_isbn13") != null && !jsonObj.get("primary_isbn13").isJsonNull()) && !jsonObj.get("primary_isbn13").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_isbn13` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_isbn13").toString()));
      }
      if ((jsonObj.get("primary_isbn10") != null && !jsonObj.get("primary_isbn10").isJsonNull()) && !jsonObj.get("primary_isbn10").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_isbn10` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_isbn10").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListGetBestSellersResponseResultsInnerBookDetailsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListGetBestSellersResponseResultsInnerBookDetailsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListGetBestSellersResponseResultsInnerBookDetailsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListGetBestSellersResponseResultsInnerBookDetailsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListGetBestSellersResponseResultsInnerBookDetailsInner>() {
           @Override
           public void write(JsonWriter out, ListGetBestSellersResponseResultsInnerBookDetailsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ListGetBestSellersResponseResultsInnerBookDetailsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ListGetBestSellersResponseResultsInnerBookDetailsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ListGetBestSellersResponseResultsInnerBookDetailsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ListGetBestSellersResponseResultsInnerBookDetailsInner
  * @throws IOException if the JSON string is invalid with respect to ListGetBestSellersResponseResultsInnerBookDetailsInner
  */
  public static ListGetBestSellersResponseResultsInnerBookDetailsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListGetBestSellersResponseResultsInnerBookDetailsInner.class);
  }

 /**
  * Convert an instance of ListGetBestSellersResponseResultsInnerBookDetailsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

