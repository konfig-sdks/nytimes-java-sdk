/*
 * Books API
 * The Books API provides information about book reviews and The New York Times Best Sellers lists.  ## Best Sellers Lists Services ### List Names The lists/names service returns a list of all the NYT Best Sellers Lists.  Some lists are published weekly and others monthly.  The response includes when each list was first published and last published.  ``` /lists/names.json ```  ### List Data  The lists/{date}/{name} service returns the books on the best sellers list for the specified date and list name.  ``` /lists/2019-01-20/hardcover-fiction.json ```  Use \"current\" for {date} to get the latest list. ``` /lists/current/hardcover-fiction.json ```  ## Book Reviews Services  The book reviews service lets you get NYT book review by author, ISBN, or title.  ``` /reviews.json?author=Michelle+Obama ```  ``` /reviews.json?isbn=9781524763138 ```  ``` /reviews.json?title=Becoming ```  ## Example Calls  ``` https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=yourkey ```  ``` https://api.nytimes.com/svc/books/v3/reviews.json?author=Stephen+King&api-key=yourkey ``` 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ListGetBestSellersResponse;
import com.konfigthis.client.model.ListGetByDateResponse;
import com.konfigthis.client.model.ListGetHistoryResponse;
import com.konfigthis.client.model.ListGetNamesResponse;
import com.konfigthis.client.model.OverviewResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ListApi
 */
@Disabled
public class ListApiTest {

    private static ListApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ListApi(apiClient);
    }

    /**
     * Best Sellers List Full Overview
     *
     * Get all books for all the Best Sellers lists for specified date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllBestSellersTest() throws ApiException {
        String publishedDate = null;
        OverviewResponse response = api.getAllBestSellers()
                .publishedDate(publishedDate)
                .execute();
        // TODO: test validations
    }

    /**
     * Best Sellers List
     *
     * Get Best Sellers list.  If no date is provided returns the latest list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBestSellersTest() throws ApiException {
        String list = null;
        String bestsellersDate = null;
        String publishedDate = null;
        Integer offset = null;
        ListGetBestSellersResponse response = api.getBestSellers(list)
                .bestsellersDate(bestsellersDate)
                .publishedDate(publishedDate)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Best Sellers List Overview
     *
     * Get top 5 books for all the Best Sellers lists for specified date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBestSellersOverviewTest() throws ApiException {
        String publishedDate = null;
        OverviewResponse response = api.getBestSellersOverview()
                .publishedDate(publishedDate)
                .execute();
        // TODO: test validations
    }

    /**
     * Best Sellers List by Date
     *
     * Get Best Sellers list by date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByDateTest() throws ApiException {
        String date = null;
        String list = null;
        Integer offset = null;
        ListGetByDateResponse response = api.getByDate(date, list)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Best Sellers List History
     *
     * Get Best Sellers list history.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHistoryTest() throws ApiException {
        String ageGroup = null;
        String author = null;
        String contributor = null;
        String isbn = null;
        Integer offset = null;
        String price = null;
        String publisher = null;
        String title = null;
        ListGetHistoryResponse response = api.getHistory()
                .ageGroup(ageGroup)
                .author(author)
                .contributor(contributor)
                .isbn(isbn)
                .offset(offset)
                .price(price)
                .publisher(publisher)
                .title(title)
                .execute();
        // TODO: test validations
    }

    /**
     * Best Sellers List Names
     *
     * Get Best Sellers list names.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNamesTest() throws ApiException {
        ListGetNamesResponse response = api.getNames()
                .execute();
        // TODO: test validations
    }

}
